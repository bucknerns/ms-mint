{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MINT (Metabolomics Integrator) MINT is an app for summing up intensity values from consistent mass spectrometry (MS) files in mzML and mzXML format. The tool extracts data within specified windows of retention time and m/z-values using a pre-defined list of peaks that can be changed from project to project. Therefore, the tool allows to reproduciblibly extract data from large numbers of MS files. Installation Here we use conda from the miniconda (or alternatively anaconda ) package to install dependencies in a virtual environment. git clone https://github.com/soerendip/ms-mint cd ms-mint conda create -n ms-mint -c plotly lxml matplotlib pandas pandoc pip plotly plotly_express dash pyqt python=3 scipy setuptools sqlite statsmodels flask conda activate ms-mint pip install pyteomics openpyxl colorlover dash-bootstrap-components python setup.py install # Don't use pip to install it. Start the application Start the app with conda activate ms-mint Mint.py # Under Linux python scripts/Mint.py # Under Windows Then navigate to the following ULR with your browser: http://localhost:9999/ The GUI The graphical user interface is explained in more detail here","title":"Home"},{"location":"#welcome-to-mint-metabolomics-integrator","text":"MINT is an app for summing up intensity values from consistent mass spectrometry (MS) files in mzML and mzXML format. The tool extracts data within specified windows of retention time and m/z-values using a pre-defined list of peaks that can be changed from project to project. Therefore, the tool allows to reproduciblibly extract data from large numbers of MS files.","title":"Welcome to MINT (Metabolomics Integrator)"},{"location":"#installation","text":"Here we use conda from the miniconda (or alternatively anaconda ) package to install dependencies in a virtual environment. git clone https://github.com/soerendip/ms-mint cd ms-mint conda create -n ms-mint -c plotly lxml matplotlib pandas pandoc pip plotly plotly_express dash pyqt python=3 scipy setuptools sqlite statsmodels flask conda activate ms-mint pip install pyteomics openpyxl colorlover dash-bootstrap-components python setup.py install # Don't use pip to install it.","title":"Installation"},{"location":"#start-the-application","text":"Start the app with conda activate ms-mint Mint.py # Under Linux python scripts/Mint.py # Under Windows Then navigate to the following ULR with your browser: http://localhost:9999/","title":"Start the application"},{"location":"#the-gui","text":"The graphical user interface is explained in more detail here","title":"The GUI"},{"location":"gui/","text":"The GUI The app's frontend is build using Plotly-Dash and runs locally in a browser. Thought, the Python functions provided can be imported and used in any Python project independently. Select MS Files (mzXML or mzML) Individual files can be added to an in worklist using the ADD FILE(S) button. If the checkbox Add files from directory is checked, all files from a directory and its subdirectories are imported that end on mzXML or mzML (not yet supported). The box is checked by default. Note that files are always added to the worklist. The worklist can be cleared with the CLEAR FILES button, which has no effect on the selected peaklists. Select Peaklist A standard peaklist is provided. A user defined peaklist can be selected and used with the SELECT PEAKLIST FILE(S) button. Peaklists are explained in more detail here . Run MINT The number of cores used for MINT can be selected with the Select number of cores slider. The maximum number shown here depends on the computer on which MINT is running. The RUN button starts mint and a progress bar monitors the progress and can be used to estimate the remaining time. Interactive Table The results Heatmap Tool Peak View 3D-Peak View","title":"The GUI"},{"location":"gui/#the-gui","text":"The app's frontend is build using Plotly-Dash and runs locally in a browser. Thought, the Python functions provided can be imported and used in any Python project independently.","title":"The GUI"},{"location":"gui/#select-ms-files-mzxml-or-mzml","text":"Individual files can be added to an in worklist using the ADD FILE(S) button. If the checkbox Add files from directory is checked, all files from a directory and its subdirectories are imported that end on mzXML or mzML (not yet supported). The box is checked by default. Note that files are always added to the worklist. The worklist can be cleared with the CLEAR FILES button, which has no effect on the selected peaklists.","title":"Select MS Files (mzXML or mzML)"},{"location":"gui/#select-peaklist","text":"A standard peaklist is provided. A user defined peaklist can be selected and used with the SELECT PEAKLIST FILE(S) button. Peaklists are explained in more detail here .","title":"Select Peaklist"},{"location":"gui/#run-mint","text":"The number of cores used for MINT can be selected with the Select number of cores slider. The maximum number shown here depends on the computer on which MINT is running. The RUN button starts mint and a progress bar monitors the progress and can be used to estimate the remaining time.","title":"Run MINT"},{"location":"gui/#interactive-table","text":"The results","title":"Interactive Table"},{"location":"gui/#heatmap-tool","text":"","title":"Heatmap Tool"},{"location":"gui/#peak-view","text":"","title":"Peak View"},{"location":"gui/#3d-peak-view","text":"","title":"3D-Peak View"},{"location":"peaklists/","text":"Peaklists A peaklist is the protocol that captures how data is going to be extracted from the individual MS-files. It is provided as csv file and essentially contains the definitions of peaks to be extracted. A single peak is defined by five properties that need to be present as headers in the csv file. peakLabel A unique identifier such as the biomarker name or ID peakMz The target mass (m/z-value) peakMzWidth[ppm] The width of the peak in the m/z-dimension in units of ppm (peakMz/1e6) rtmin The start of the retention time for each peak in seconds. rtmax The end of the retention time for each peak in seconds. Example Peaklist peaklist.csv peakLabel,peakMz,peakMzWidth[ppm],rtmin,rtmax Arabitol,151.0605,10,4.65,5.2 Xanthine,151.02585,10,4.18,4.53","title":"Peaklists"},{"location":"peaklists/#peaklists","text":"A peaklist is the protocol that captures how data is going to be extracted from the individual MS-files. It is provided as csv file and essentially contains the definitions of peaks to be extracted. A single peak is defined by five properties that need to be present as headers in the csv file.","title":"Peaklists"},{"location":"peaklists/#peaklabel","text":"A unique identifier such as the biomarker name or ID","title":"peakLabel"},{"location":"peaklists/#peakmz","text":"The target mass (m/z-value)","title":"peakMz"},{"location":"peaklists/#peakmzwidthppm","text":"The width of the peak in the m/z-dimension in units of ppm (peakMz/1e6)","title":"peakMzWidth[ppm]"},{"location":"peaklists/#rtmin","text":"The start of the retention time for each peak in seconds.","title":"rtmin"},{"location":"peaklists/#rtmax","text":"The end of the retention time for each peak in seconds.","title":"rtmax"},{"location":"peaklists/#example-peaklist","text":"peaklist.csv peakLabel,peakMz,peakMzWidth[ppm],rtmin,rtmax Arabitol,151.0605,10,4.65,5.2 Xanthine,151.02585,10,4.18,4.53","title":"Example Peaklist"}]}